name: Publish Code Guardian

on:
  push:
    tags:
      - "v*.*.*" # e.g., v1.2.3 triggers release

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 📄 Get version from package.json
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: 🛡️ Verify tag matches package.json version
        run: |
          TAG="${{ github.ref_name }}"
          PKG_VERSION="v${{ steps.get_version.outputs.version }}"
          if [ "$TAG" != "$PKG_VERSION" ]; then
            echo "::error file=package.json,line=1::Tag '$TAG' does not match package.json version '$PKG_VERSION'"
            exit 1
          fi

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: ♻️ Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Type-check and lint
        run: |
          npm run check-types
          npm run lint

      - name: 🛠️ Build extension
        run: npm run compile

      - name: 📦 Package extension
        run: npx vsce package

      - name: ⬆️ Upload VSIX artifact
        uses: actions/upload-artifact@v3
        with:
          name: code-guardian.vsix
          path: "*.vsix"

      - name: 🚀 Publish to VS Code Marketplace
        run: npx vsce publish -p ${{ secrets.VSCE_TOKEN }} --no-verify
        env:
          NODE_AUTH_TOKEN: ${{ secrets.VSCE_TOKEN }}
